{"version":3,"sources":["webpack:///./content/components.mdx"],"names":["_frontmatter","makeShortcode","name","props","console","warn","Accordion","Button","Checklist","Box","Chocolate","Icon","List","Link","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","to","size","isMDXComponent"],"mappings":"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","file":"component---content-components-mdx-72b99298afc565f1d45a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/rejon/MaximumMDX/src/modules/layouts/mdx_layout.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst Accordion = makeShortcode(\"Accordion\");\nconst Button = makeShortcode(\"Button\");\nconst Checklist = makeShortcode(\"Checklist\");\nconst Box = makeShortcode(\"Box\");\nconst Chocolate = makeShortcode(\"Chocolate\");\nconst Icon = makeShortcode(\"Icon\");\nconst List = makeShortcode(\"List\");\nconst Link = makeShortcode(\"Link\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1>{`Component Palette`}</h1>\n    <p>{`This page serves as a palette for all the components this project has to offer.`}</p>\n    <hr></hr>\n    <h4>{`Definitions`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`WYSIWYG`}</strong>{`: What you see is what you get.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Component`}</strong>{`: A lego block like code element you can use for more advanced content like buttons.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`MD`}</strong>{`: Shorthand for Markdown`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`MDX`}</strong>{`: Shorthand for MarkdownExtended (ie. MDX is the name of the rendering engine we use.)`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Child/Children`}</strong>{`: Content that is wrapped by a Component. New lines between content will be recognized as a new child.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\"><strong parentName=\"p\">{`Child Rule`}</strong>{`: A pattern introduced for more complex components that recognized each individual child as a repeatable element of a component. (ie. List, Checklist, ect.)`}</p>\n      </li>\n    </ul>\n    <hr></hr>\n    <h4>{`Disclaimers`}</h4>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`This palette is primarily to showcase component usage in a vacuum, and to act as helpers.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Always remember. What you see is what you get. (WYSIWYG). We follow the markdown spec.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`There's no mobile styles for these really. Use at your own risk.`}</p>\n      </li>\n    </ul>\n    <hr></hr>\n    <h1>{`Accordion`}</h1>\n    <p>{`Click the Accordion header to show and hide the content it offers.`}</p>\n    <p>{`The first element is always the header. Every other element will be hidden away.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Accordion>Hello World This is hidden inside the Accordion.</Accordion>\n`}</code></pre>\n    <hr></hr>\n    <Accordion mdxType=\"Accordion\">\n      <p>{`Hello World`}</p>\n      <p>{`This is hidden inside the Accordion.`}</p>\n    </Accordion>\n    <hr></hr>\n    <h1>{`Button`}</h1>\n    <p>{`It's a button. Not much more to it.`}</p>\n    <p><strong parentName=\"p\">{`Dev Note(RÃ©jon): Because this site doesn't provide any stateful functionality (besides light/dark modes), Buttons are built to serve as a unique visual display of links.`}</strong></p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Button to=\"/\"> ET phone Home </Button>\n`}</code></pre>\n    <hr></hr>\n    <Button to=\"/\" mdxType=\"Button\"> ET phone Home </Button>\n    <hr></hr>\n    <h1>{`Checklist`}</h1>\n    <h4>{`Child Rule in Effect`}</h4>\n    <p>{`This is a non-functioning checklist component. It is simply styled to look like one.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Checklist>\n  Child A Child B\n  <Box>\n    Child C\n  </Box>\n</Checklist>\n`}</code></pre>\n    <hr></hr>\n    <Checklist mdxType=\"Checklist\">\n      <p>{`Child A`}</p>\n      <p>{`Child B`}</p>\n      <Box mdxType=\"Box\">\n        <p>{`Child C`}</p>\n      </Box>\n    </Checklist>\n    <hr></hr>\n    <h1>{`Chocolate (Box)`}</h1>\n    <h4>{`Child Rule in Effect`}</h4>\n    <p>{`Originally named \"Chocolate Box\" components, this component takes into consideration the child rule.\nEach child is recognized as a new element. Thus it's recommended for more diverse content to be contained\nby a `}<inlineCode parentName=\"p\">{`Box`}</inlineCode>{` component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<Chocolate>\n  <Box>\n    <Icon size={\"40px\"} name=\"maker\" />\n    ##### Child A Some content about something\n  </Box>\n\n  <Box>\n    <Icon size={\"40px\"} name=\"globe\" />\n    ##### Child B Some content about something\n  </Box>\n\n  <Box>\n    <Icon size={\"40px\"} name=\"wrench\" />\n    ##### Child C Some content about something\n  </Box>\n</Chocolate>\n`}</code></pre>\n    <hr></hr>\n    <Chocolate mdxType=\"Chocolate\">\n      <Box mdxType=\"Box\">\n        <Icon size={\"40px\"} name=\"maker\" mdxType=\"Icon\" />\n        <h5>{`Child A`}</h5>\n        <p>{`Some content about something`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Icon size={\"40px\"} name=\"globe\" mdxType=\"Icon\" />\n        <h5>{`Child B`}</h5>\n        <p>{`Some content about something`}</p>\n      </Box>\n      <Box mdxType=\"Box\">\n        <Icon size={\"40px\"} name=\"wrench\" mdxType=\"Icon\" />\n        <h5>{`Child C`}</h5>\n        <p>{`Some content about something`}</p>\n      </Box>\n    </Chocolate>\n    <hr></hr>\n    <h1>{`List`}</h1>\n    <p>{`The List component is great if you want to display content...in the form of....a list.`}</p>\n    <h4>{`Child Rule in Effect`}</h4>\n    <p><strong parentName=\"p\">{`To get the most out of lists (ie. headers, subcontent, links) you MUST use a `}<inlineCode parentName=\"strong\">{`Box`}</inlineCode>{` or `}<inlineCode parentName=\"strong\">{`Link`}</inlineCode>{` component\nbased on your specific needs.`}</strong></p>\n    <hr></hr>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`<List>\n\nElement A\n\nElement B\n\n</List>\n\n<List>\n\n<Box>\n\nElement A Header\n\nSome content below the header\n\n</Box>\n\nElement B with no subcontent\n\n<Box>\n\nElement C Header\n\nSome content below the header\n\n</Box>\n\n</List>\n\n<List>\n\n<Link to=\"/\">\n\nLink Element A Header\n\nSome content below the header\n\n</Link>\n\n<Link to=\"https://makerdao.com/\">\n\nExternal Link Element B Header\n\nSome content below the header\n\n</Link>\n\n</List>\n`}</code></pre>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <p>{`Element A`}</p>\n      <p>{`Element B`}</p>\n    </List>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <Box mdxType=\"Box\">\n        <p>{`Element A Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Box>\n      <p>{`Element B with no subcontent`}</p>\n      <Box mdxType=\"Box\">\n        <p>{`Element C Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Box>\n    </List>\n    <hr></hr>\n    <List mdxType=\"List\">\n      <Link to=\"/\" mdxType=\"Link\">\n        <p>{`Link Element A Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Link>\n      <Link to=\"https://makerdao.com/\" mdxType=\"Link\">\n        <p>{`External Link Element B Header`}</p>\n        <p>{`Some content below the header`}</p>\n      </Link>\n    </List>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}